Ongoing GamePipe R&D Projects
01/27/2014

The GamePipe Laboaratory has several ongoing research projects that are available for DR students. These projects provide a chance to be acknowledged as a contributor or co-author of research papers, as well as valuable experience in educational and other serious games. The following list gives some details about each project along with estimated relative difficulty ratings (1-5) assuming a user with the requisite skills. Please contact Powen Yao at powen@usc.edu for further information.

- <b>Behavior Box</b>: I am very interested in how real-time newsfeeds change the behavior of AI characters in online games. I would love a full-on demo to be put together on this. The game environment has to be a 3D game built in Unity. We need an architecture for monitoring RSS feeds from cnn.com such that we can recognize events/stories we have previously highlighted as “interesting to us”. Those stories have to be read by a natural language processing system (find an open source available one). The NLP results have to be converted into new emotional states for the AI characters. We use a model like EmoCog (or a simpler, hacked version initially) to feed these new emotional states to our AI characters. We map animated states/behaviors that happen from incoming NLP-provided emotional states.
- <b>EmoCog</b>: An AI cognitive architecture for experiments on emotion generation and effects. Built in Java using various 3rd party libraries. Currently we are designing a Turing Test-inspired experiment to gauge the system’s emotional and cognitive responses to running a nuclear power plant. Help needed with deployment and experiment administration . Rated easy (2) for experimental 2D UI design and database management, but time-critical.
- <b>Satellite Robot Sim</b>: Design and program a virtual robotic satellite assembler / disassembler and an outer space scenario for it to operate in. Multiplayer infrastructure using Unity, and possibly social networks. The game element of the system will be to determine the best robot operator in a simulated physically accurate zero gravity environment, under hostile conditions such as a space war. Rated moderate (3) for graphical and physics effects and easy (2) for gameplay programming.
- <b>Team-Based Android Game or App</b>: if you have a particular app/game you wish to build for your DR, that is also fine. My preference is team-based as opposed to one person only.